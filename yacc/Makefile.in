#
# yacc/Makefile.in
# 
# This file is part of the Oxford Oberon-2 compiler
# Copyright (c) 2006--2016 J. M. Spivey
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# Config stuff
OCAMLC = ocamlc
OCAMLLEX = ocamllex
CAMLDEP = @top_srcdir@/camldep
MLFLAGS = @MLFLAGS@
srcdir = @srcdir@
subdir = yacc
SHELL = /bin/sh
DEPEND = @DEPEND@
EXEEXT = @EXEEXT@
VPATH = @srcdir@
# End of config

all: myacc yyparse.cmo

COMMON = yyparse.cmo growvect.cmo vector.cmo print.cmo error.cmo util.cmo \
	table.cmo grammar.cmo lr0.cmo report.cmo lalr.cmo \
	conflict.cmo compile.cmo output.cmo

bootyacc: $(COMMON) bootlexer.cmo bootyacc.cmo bootmain.cmo
	ocamlc $(MLFLAGS) -o $@ str.cma $^

myacc: $(COMMON) lexer.cmo yacc.cmo main.cmo
	ocamlc $(MLFLAGS) -o $@ str.cma $^

bootlexer.ml bootmain.ml: boot%: %
	sed -e 's/Yacc/Bootyacc/g' -e 's/Lexer/Bootlexer/' $< >$@

%.cmo: %.ml
	ocamlc $(MLFLAGS) -c -o $@ $<

%.cmi: %.mli
	ocamlc $(MLFLAGS) -c -o $@ $<

%.ml: %.mll
	ocamllex -o $@ $<

%.mli %.ml: %.mly bootyacc
	./bootyacc $<

update: force
	cp yacc.mli bootyacc.mli
	cp yacc.ml bootyacc.ml

# Cleanup

clean: force

quiteclean: clean
	rm -f myacc bootyacc
	rm -f *.cmi *.cmo
	rm -f lexer.ml yacc.ml yacc.mli
	rm -f bootmain.ml bootlexer.ml

distclean: quiteclean
	rm -f Makefile

realclean: distclean
	rm -f Depend

force:

# Config and dependencies

$(srcdir)/configure: configure.in
	cd $(srcdir) && $(AUTOCONF)

config.status: configure
	./config.status --recheck

Makefile: $(srcdir)/Makefile.in config.status
	./config.status $@

###

bootlexer.cmo : bootyacc.cmi error.cmi grammar.cmi output.cmi print.cmi
bootmain.cmo  : bootlexer.cmo bootyacc.cmi compile.cmi conflict.cmi \
		error.cmi grammar.cmi lalr.cmi lr0.cmi output.cmi print.cmi \
		report.cmi table.cmi util.cmi vector.cmi yyparse.cmi
bootyacc.cmo  : bootyacc.cmi error.cmi print.cmi yyparse.cmi
bootyacc.cmi  : grammar.cmi
compile.cmo   : compile.cmi util.cmi
compile.cmi   : grammar.cmi lr0.cmi
conflict.cmo  : conflict.cmi error.cmi print.cmi util.cmi
conflict.cmi  : grammar.cmi lr0.cmi
error.cmo     : error.cmi
error.cmi     : print.cmi
grammar.cmo   : error.cmi grammar.cmi growvect.cmi
grammar.cmi   : print.cmi vector.cmi
growvect.cmo  : growvect.cmi
lalr.cmo      : grammar.cmi lalr.cmi lr0.cmi print.cmi report.cmi vector.cmi
lexer.cmo     : error.cmi grammar.cmi output.cmi print.cmi yacc.cmi
lr0.cmo       : growvect.cmi lr0.cmi util.cmi
lr0.cmi       : grammar.cmi print.cmi vector.cmi
main.cmo      : compile.cmi conflict.cmi error.cmi grammar.cmi lalr.cmi \
		lexer.cmo lr0.cmi output.cmi print.cmi report.cmi table.cmi \
		util.cmi vector.cmi yacc.cmi yyparse.cmi
output.cmo    : compile.cmi error.cmi growvect.cmi output.cmi print.cmi \
		yyparse.cmi
output.cmi    : grammar.cmi lr0.cmi table.cmi vector.cmi
print.cmo     : print.cmi
report.cmo    : error.cmi print.cmi report.cmi
report.cmi    : grammar.cmi lr0.cmi vector.cmi
table.cmo     : table.cmi util.cmi
table.cmi     : growvect.cmi
util.cmo      : print.cmi util.cmi
vector.cmo    : vector.cmi
yacc.cmo      : error.cmi print.cmi yacc.cmi yyparse.cmi
yacc.cmi      : grammar.cmi
yyparse.cmo   : yyparse.cmi
